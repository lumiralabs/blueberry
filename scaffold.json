{
    "name": "boilerplate",
    "type": "next.js",
    "version": "1.0.0",
    "description": "Full-stack Next.js boilerplate with Supabase authentication, dashboard, and modern UI components",
    "structure": {
      "root": {
        "app": {
          "description": "Next.js app directory for routing and pages",
          "contents": {
            "api": {
              "type": "directory",
              "description": "API route handlers",
              "pattern": "Route handlers follow Next.js App Router conventions with route.ts files"
            },
            "signin": {
              "type": "directory",
              "description": "Authentication pages",
              "contents": {
                "page.tsx": {
                  "type": "file",
                  "description": "Sign in page component",
                  "features": ["OAuth providers", "Email/Password auth", "Redirect handling"]
                }
              }
            },
            "globals.css": {
              "type": "file",
              "description": "Global styles",
              "includes": ["Tailwind directives", "Custom variables", "Global resets"]
            },
            "layout.tsx": {
              "type": "file",
              "description": "Root layout component",
              "features": ["Meta tags", "Global providers", "Analytics setup"]
            },
            "page.tsx": {
              "type": "file",
              "description": "Home page component",
              "features": ["Landing page", "Marketing content", "Call-to-action"]
            }
          }
        },
        "components": {
          "description": "Reusable UI components",
          "contents": {
            "ButtonAccount.tsx": {
              "type": "file",
              "description": "Account management button component",
              "props": {
                "user": "User object from Supabase",
                "session": "Current auth session"
              },
              "features": ["User menu", "Sign out", "Account settings"]
            },
            "ButtonSignin.tsx": {
              "type": "file",
              "description": "Sign in button component",
              "props": {
                "provider": "OAuth provider name",
                "redirectUrl": "Post-auth redirect path"
              },
              "features": ["OAuth flow", "Loading states", "Error handling"]
            },
            "LayoutClient.tsx": {
              "type": "file",
              "description": "Client-side layout component",
              "features": ["Navigation", "Color Theme", "Responsive design"]
            },
            "ui": {
              "type": "directory",
              "description": "UI component library",
              "styling": "Tailwind CSS with shadcn/ui components",
              "contents": {
                "button.tsx": "Styled button component",
                "input.tsx": "Form input component",
                "card.tsx": "Card container component",
                "dialog.tsx": "Modal dialog component"
              }
            }
          }
        },
        "libs": {
          "description": "Utility libraries and services",
          "contents": {
            "api.ts": {
              "type": "file",
              "description": "API utility functions",
              "exports": {
                "fetchData": "Generic data fetching with error handling",
                "handleResponse": "Response parsing and error handling"
              }
            },
            "seo.tsx": {
              "type": "file",
              "description": "SEO components and utilities",
              "exports": {
                "Metadata": "Dynamic metadata component",
                "generateMetadata": "Metadata generation utility"
              }
            },
            "api.tsx": {
              "type": "file",
              "description": "fetch api wrapper",
              "exports": {
                "fetchData": "Generic data fetching with error handling",
                "handleResponse": "Response parsing and error handling"
              }
            },
            "supabase": {
              "type": "directory",
              "description": "Supabase client and server utilities",
              "contents": {
                "middleware.ts": {
                  "type": "file",
                  "description": "Supabase client, server and middleware for session handling",
                  "exports": {
                    "updateSession": {
                      "type": "function",
                      "description": "Updates and refreshes the auth session using cookies",
                      "usage": "Called by root middleware for auth state management",
                      "implementation": "Cookie-based session refresh with error handling"
                    }
                  }
                }
              }
            }
          }
        },
        "config": {
          "description": "Configuration files",
          "contents": {
            "tsconfig.json": {
              "type": "file",
              "description": "TypeScript configuration",
              "config": {
                "target": "es5",
                "lib": ["dom", "dom.iterable", "esnext"],
                "strict": true,
                "paths": {
                  "@/*": ["./*"]
                }
              }
            },
            "tailwind.config.js": {
              "type": "file",
              "description": "Tailwind CSS configuration",
              "config": {
                "content": ["./app/**/*.{ts,tsx}", "./components/**/*.{ts,tsx}"],
                "theme": {
                  "extends": {}
                },
                "plugins": ["@tailwindcss/forms"]
              }
            },
            "postcss.config.js": {
              "type": "file",
              "description": "PostCSS configuration",
              "plugins": ["tailwindcss", "autoprefixer"]
            },
            "next.config.js": {
              "type": "file",
              "description": "Next.js configuration",
              "config": {
                "images": {
                  "domains": ["*.supabase.co"]
                }
              }
            },
            "components.json": {
              "type": "file",
              "description": "UI components configuration",
              "config": {
                "style": "default",
                "rsc": true,
                "tailwind": {
                  "config": "tailwind.config.js",
                  "css": "app/globals.css"
                }
              }
            },
            "config.ts": {
              "type": "file",
              "description": "Application configuration",
              "exports": {
                "siteConfig": "Site-wide configuration",
                "navItems": "Navigation structure"
              }
            }
          }
        },
        "types": {
          "type": "directory",
          "description": "TypeScript type definitions",
          "contents": {
            "supabase.ts": "Database and auth types",
            "api.ts": "API response types",
            "navigation.ts": "Navigation types"
          }
        },
        "middleware.ts": {
          "type": "file",
          "description": "Next.js middleware for request handling",
          "exports": {
            "middleware": {
              "type": "function",
              "description": "Root middleware function that handles all matched routes",
              "usage": "Manages authentication session updates",
              "implementation": "Session refresh and route protection"
            },
            "config": {
              "type": "object",
              "description": "Middleware configuration",
              "matcher": "Excludes static files, images, and assets from middleware processing"
            }
          }
        }
      }
    },
    "dependencies": {
      "framework": {
        "next": "^14.0.0",
        "react": "^18.0.0",
        "react-dom": "^18.0.0"
      },
      "database": {
        "supabase": "^2.0.0",
        "@supabase/ssr": "latest"
      },
      "styling": {
        "tailwindcss": "^3.0.0",
        "postcss": "^8.0.0",
        "autoprefixer": "^10.0.0",
        "@tailwindcss/forms": "latest"
      },
      "ui": {
        "@radix-ui/react-dialog": "latest",
        "@radix-ui/react-slot": "latest",
        "class-variance-authority": "latest",
        "clsx": "latest",
        "tailwind-merge": "latest"
      },
      "language": {
        "typescript": "^5.0.0",
        "@types/node": "latest",
        "@types/react": "latest"
      }
    },
    "features": [
      {
        "name": "Authentication",
        "description": "Full authentication system with Supabase",
        "capabilities": [
          "OAuth providers",
          "Session management",
          "Protected routes"
        ]
      },
      {
        "name": "API Routes",
        "description": "Next.js API routes with Supabase integration",
        "capabilities": [
          "Data fetching",
          "Error handling",
          "Type safety"
        ]
      },
      {
        "name": "SEO",
        "description": "Search engine optimization setup",
        "capabilities": [
          "Dynamic metadata",
          "Open Graph tags",
          "Structured data"
        ]
      },
      {
        "name": "UI Components",
        "description": "Reusable UI component system",
        "capabilities": [
          "Accessible components",
          "Responsive design",
          "Dark mode support"
        ]
      }
    ],
    "auth": {
      "provider": "supabase",
      "implementation": {
        "middleware": {
          "session_handling": "Cookie-based session management",
          "token_refresh": "Automatic token refresh in middleware",
          "route_protection": "All routes except static assets"
        },
        "server_utilities": {
          "client_creation": "Server-side Supabase client with cookie handling",
          "session_management": "Server-side session verification and updates"
        },
        "client_utilities": {
          "auth_hooks": "React hooks for auth state",
          "protected_routes": "HOC for route protection",
          "auth_forms": "Pre-built authentication forms"
        }
      }
    },
    "deployment": {
      "requirements": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "environment_variables": {
        "required": [
          "NEXT_PUBLIC_SUPABASE_URL",
          "NEXT_PUBLIC_SUPABASE_ANON_KEY",
          "SUPABASE_SERVICE_ROLE_KEY"
        ],
        "optional": [
          "NEXT_PUBLIC_SITE_URL",
          "NEXT_PUBLIC_GA_ID"
        ]
      },
      "build_command": "npm run build",
      "start_command": "npm start",
      "development_command": "npm run dev"
    }
  } 